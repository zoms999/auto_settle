// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  deals         Deal[]
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Deal {
  id              String            @id @default(uuid())
  companyName     String            @map("company_name")
  managerName     String?           @map("manager_name")
  contactInfo     Json?             @map("contact_info")
  status          DealStatus        @default(PROSPECT)
  memo            String?
  checklists      Json?
  user            User              @relation(fields: [userId], references: [id])
  userId          String            @map("user_id")
  services        Service[]
  paymentSchedules PaymentSchedule[]
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  @@map("deals")
}

model Service {
  id      String      @id @default(uuid())
  type    ServiceType
  details Json?
  cost    BigInt?
  deal    Deal        @relation(fields: [dealId], references: [id])
  dealId  String      @map("deal_id")

  @@map("services")
}

model PaymentSchedule {
  id          String   @id @default(uuid())
  dueDate     DateTime @map("due_date")
  amount      BigInt
  description String?
  isPaid      Boolean  @default(false) @map("is_paid")
  deal        Deal     @relation(fields: [dealId], references: [id])
  dealId      String   @map("deal_id")

  @@map("payment_schedules")
}

enum DealStatus {
  PROSPECT
  ONGOING
  CARRIED_OVER
  COMPLETED
  HOLD
}

enum ServiceType {
  TEST
  LECTURE
  CONSULTING
  ACTIVITY
  ETC
  REPORT
}
